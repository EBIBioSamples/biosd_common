<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

	<parent>
	  <groupId>uk.ac.ebi.fg.biosd</groupId>
	  <artifactId>biosd_deploy</artifactId>
	  <version>1.0.1-SNAPSHOT</version>
	</parent>

  <artifactId>biosd_common</artifactId>
  <version>2.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>BioSD Common Elements</name>
  <url>http://github.com/EBIBioSamples/biosd_common</url>

	<description><![CDATA[
		This is a container of common configuration elements (e.g., databases) and building elements (e.g., logging), which 
		are used by BioSD-related projects (www.ebi.ac.uk/biosamples).
		
		If you're creating a new Maven project about BioSD, which has to use these elements, you're strongly recommended 
		to make it dependent on this POM, via the parent directive (see below).
		
		------ Instructions -------
		
	  Make your BioSD project depending on this POM by means of the following in your POM. You don't need to
	  have our parent POM downloaded in your directory (Maven does it automatically) and we make an effort to 
	  change the version of this POM as little as possible, so that you won't have to make updates either. 
	  
	  Moreover, let us know if you want such updates to be made automatically in your project, when we change the main 
	  POM, we have a Bamboo plan to do that. Alternatively, you may want to setup a similar plan 
	  (http://marcobrandizi.info/mysite/node/146, dependencies update).
	  
	  Of course, your project doesn't need at all to have the same version that we have here for this POM.

		1. Declare our BioSD/GitHub repository in your POM: 
		
		<repository>
	    <id>EBIBioSamples-GH-repo</id>
	    <url>https://raw.githubusercontent.com/EBIBioSamples/EBIBioSamples.github.io/maven-repo</url>
	    <snapshots>
        <enabled>true</enabled>
	    </snapshots>
    </repository>
			
		
		2. Make your POM a parent of ourselves: 
		
		<parent>
	  	<groupId>uk.ac.ebi.fg.biosd</groupId>
		  <artifactId>biosd_common</artifactId>
		  <version>SEE-VERSION-ABOVE</version>
		</parent> 


		Done! Now you should have the stuff we define hereby for you, such as dependency versions, BioSD database profiles
		used internally at the EBI.
		
		
		
		--------- Deployment ---------
		
		We are parent of our special POM, which is used to deploy stuff on our GitHub repository, so you can deploy 
		there your project, if this inherits from ourselves. Follow instructions at: 
		
		https://github.com/EBIBioSamples/EBIBioSamples.github.io/blob/master/deploy_pom/pom.xml 
		
		Note that, once you've successufully setup your project as a child of biosd_common, you need only the steps 3
		and 4 from the instructions above (i.e., setting up GH account and OAuth tokens), the deploy_pom is automatically
		inherited. 
	]]></description>


  <properties>
		<h2.version>1.3.168</h2.version>
		<p6spy.version>2.1.4</p6spy.version>
		<hsql.version>2.2.9</hsql.version>

		<oracle.groupId>com.oracle</oracle.groupId>
		<oracle.artifactId>ojdbc6</oracle.artifactId>
  	<oracle.version>11.2.0.3</oracle.version>
		<oracle.jdbc.driverClassName>oracle.jdbc.driver.OracleDriver</oracle.jdbc.driverClassName>
		<oracle.hibernate.dialect>org.hibernate.dialect.Oracle10gDialect</oracle.hibernate.dialect>
		<spring.version>4.0.5.RELEASE</spring.version>
		<hibernate.core-em.version>4.3.11.Final</hibernate.core-em.version>
		<hibernate.validator.version>5.1.3.Final</hibernate.validator.version>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    
	</properties>



	<dependencyManagement>
	
		<dependencies>

			<!-- We use the common interface for logging. This is able to wrap other loggers you might be using transparently 
			(e.g., log4), which given a number of advantages (e.g., common configuration files). You need to complete this 
			with interceptors and exclusions, 
			see below -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.6</version>
			</dependency>
	
			<!-- We use this logger by default, you should either setup it or use another one (e.g., the Log4J wrapper below) -->
	
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>0.9.29</version>
			</dependency>
	
			<!-- Intercepts log4j and sends it to logback, this usually requires that you override existing log4j 
			dependency with scope = provided -->		
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>1.6.6</version>
			</dependency>
			
			<!-- The same for Java Common Logging -->
			<dependency>
			  <groupId>org.slf4j</groupId>
			  <artifactId>jcl-over-slf4j</artifactId>
			  <version>1.6.6</version>
			</dependency>		
	
	
			<!-- Our packages -->
			<dependency>
				<groupId>uk.ac.ebi.fg</groupId>
			  <artifactId>core_model</artifactId>
			  <version>4.0.1-SNAPSHOT</version>
			</dependency>
						
			<dependency>
			  <groupId>uk.ac.ebi.fg</groupId>
			  <artifactId>biosd_model</artifactId>
				<version>4.0.1-SNAPSHOT</version>
			</dependency>			
	
			<dependency>
				<groupId>uk.ac.ebi.fg</groupId>
				<artifactId>biosd_loader</artifactId>
				<version>3.0.1-SNAPSHOT</version>
			</dependency>
			
			<dependency>
				<groupId>${project.groupId}</groupId>			
				<artifactId>biosd_feature_annotator</artifactId>
				<version>1.0.1-SNAPSHOT</version>
			</dependency>			
	
			<dependency>
				<groupId>uk.ac.ebi.fg</groupId>
				<artifactId>myequivalents-db</artifactId>
				<version>1.1-SNAPSHOT</version>
			</dependency>  
	
			<!-- Sometimes you may want this in the compile scope, not test, and hence it's put here -->		
		  <dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.10</version>
		  </dependency>
		
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>18.0</version>
			</dependency>
	
			<dependency>
		  	<groupId>org.hibernate</groupId>
		  	<artifactId>hibernate-core</artifactId>
				<version>${hibernate.core-em.version}</version>
			</dependency>

			<dependency>
			  <groupId>org.hibernate</groupId>
			  <artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.core-em.version}</version>
			</dependency>
			
			<dependency>
			  <groupId>org.hibernate</groupId>
			  <artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
    	</dependency>
					
			<!-- WARNING: I can't remeber a single case where this works, rather than screwing you with horrible 
			     concurrency monsters -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-c3p0</artifactId>
				<version>4.3.11.Final</version>
    	</dependency>
					
			<!-- Try to avoid to use this, lang3 is better  -->			
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
	    
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3</version>		
			</dependency>
	          		
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils-core</artifactId>
				<version>1.8.3</version>
			</dependency>
	          		
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
			</dependency>
	
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>				            		
							  
			<dependency>
				<groupId>uk.ac.ebi</groupId>
				<artifactId>jutils</artifactId>
				<version>5.1-SNAPSHOT</version>
			</dependency>
		
			<dependency>
			 <groupId>org.springframework</groupId>
			 <artifactId>spring-context</artifactId>
			 <version>${spring.version}</version>
			</dependency> 
	
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
			 	<version>${spring.version}</version>
			</dependency>	  	
	
	
			<!-- Allows you to assert which exception should be triggered by a method invocation and helps test writing 
					 a lot -->
			<dependency>
			  <groupId>com.googlecode.catch-exception</groupId>
			  <artifactId>catch-exception</artifactId>
			  <version>1.0.4</version>
			</dependency>
	
			<!-- A great library that simplify the management of time entities -->
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.3</version>
			</dependency>

			<!-- We usually use this for processing command line options -->				  
			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
			</dependency>
				 
		</dependencies>
	
	</dependencyManagement>  


	<repositories>

		<repository>
	    <id>EBIBioSamples-GH-repo</id>
	    <url>https://raw.githubusercontent.com/EBIBioSamples/EBIBioSamples.github.io/maven-repo</url>
	    <snapshots>
        <enabled>true</enabled>
	    </snapshots>
    </repository>

	  <repository>
		  <id>ebi-repo-old</id>
		  <name>EBI Repository</name>
		  <url>http://www.ebi.ac.uk/~maven/m2repo</url>
	  </repository>
		
	  <repository>
		  <id>ebi-repo-old-snapshots</id>
		  <name>EBI Snapshots Repository</name>
		  <url>http://www.ebi.ac.uk/~maven/m2repo_snapshots</url>
		  <snapshots><enabled>true</enabled></snapshots>
	  </repository>

		
		<!-- Has the Oracle driver, which cannot be published outside, for copyright reasons -->		
		<repository>
			<id>coconut.ebi.ac.uk-snapshots</id>
			<name>Coconut Snapshot Repository</name>
			<url>http://coconut.ebi.ac.uk:8081/artifactory/local-repo/</url>
			<snapshots>
			  <enabled>true</enabled>
			</snapshots>
		</repository>
		
		<repository>
			<id>coconut.ebi.ac.uk</id>
			<name>coconut.ebi.ac.uk-releases</name>
			<url>http://coconut.ebi.ac.uk:8081/artifactory/hasbanana</url>
		</repository>
			
	</repositories>
	
	<scm>
		<developerConnection>scm:git:git@github.com:EBIBioSamples/biosd_common.git</developerConnection>
	</scm>	


	<build>
	
		<!-- 
			We filter */resources by default, override it in your POM in case you need something different 
		-->
    <testResources>
	    <testResource>
	      <directory>src/test/resources</directory>
	      <filtering>true</filtering>
	    </testResource>
    </testResources>

    <resources>
	    <resource>
	      <directory>src/main/resources</directory>
	      <filtering>true</filtering>
	    </resource>
    </resources>	
	
		<pluginManagement>
			<plugins>
			
	      <plugin>
					<artifactId>maven-compiler-plugin</artifactId>
		      <configuration>
		        <source>1.7</source>
		        <target>1.7</target>
		        <encoding>utf-8</encoding>
		      </configuration>
		    </plugin>
		    
		    <plugin>
			    <artifactId>maven-source-plugin</artifactId>
			    <executions>
			      <execution>
			        <id>attach-source</id>
			        <goals>
			          <goal>jar</goal>
			        </goals>
			      </execution>
			    </executions>
		    </plugin>
		    	
	
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<properties>
							<property>
								<!-- Prints out spaces and test name before/after every test method 
									and automatically -->
								<name>listener</name>
								<value>uk.ac.ebi.utils.test.junit.TestOutputDecorator</value>
							</property>
						</properties>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
		
		<extensions>
			<!-- Needed for sftp-based deployment -->
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>2.2</version>
			</extension>
		</extensions>
	
	</build>


	<profiles>
	
		<!-- 
	    The test.* profiles set up properties like test.*, these are used in test configuration files, (e.g.,
	    src/test/resources/hibernate.properties). These is done to allow you to define similar files in your Maven project, 
	    but without the test.* prefix. In other words, you can play with profiles and keep separated certain properties 
	    depending on a real environment (e.g., production, staging) from test properties like the ones defined here.
	    
	    See our documentation (https://github.com/EBIBioSamples/myequivalents/wiki/Building-the-MyEquivalents-Software, 
	    TODO: this is a provisional link about a very similar project) for further information on how profiles work in 
	    BioSD and how you should arrange your project to use them. 
	  -->

		
		<profile>
			<id>test.oracle_prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<test.jdbc.username>biosd</test.jdbc.username>
				<test.jdbc.password>b10sdp40</test.jdbc.password>
				<test.jdbc.url>jdbc:oracle:thin:@ora-vm-023.ebi.ac.uk:1531:BIOSDPRO</test.jdbc.url>
				<test.jdbc.driverClassName>${oracle.jdbc.driverClassName}</test.jdbc.driverClassName>
				<test.hibernate.dialect>${oracle.hibernate.dialect}</test.hibernate.dialect>
				<test.hibernate.hbm2ddl.auto />
			</properties>
			<dependencies>
				<dependency>
					<groupId>${oracle.groupId}</groupId>
					<artifactId>${oracle.artifactId}</artifactId>
					<version>${oracle.version}</version>
				</dependency>
			</dependencies>
		</profile>	



		<profile>
			<id>oracle_prod</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<jdbc.username>biosd</jdbc.username>
				<jdbc.password>b10sdp40</jdbc.password>
				<jdbc.url>jdbc:oracle:thin:@ora-vm-023.ebi.ac.uk:1531:BIOSDPRO</jdbc.url>
				<jdbc.driverClassName>${oracle.jdbc.driverClassName}</jdbc.driverClassName>
				<hibernate.dialect>${oracle.hibernate.dialect}</hibernate.dialect>
				<hibernate.hbm2ddl.auto />
			</properties>
			<dependencies>
				<dependency>
					<groupId>${oracle.groupId}</groupId>
					<artifactId>${oracle.artifactId}</artifactId>
					<version>${oracle.version}</version>
				</dependency>
			</dependencies>
		</profile>


		<!-- .............. Just ignore myeq profiles if you don't use myequivalents ................. -->
		
		<!-- 
			The test instance of myEquivalents X-references for BioSD. 
			This usually points at an empty database, so it actually disables myEq.
			
			This profiles can fill a template like: 
			https://github.com/EBIBioSamples/biosd2rdf/blob/master/src/main/assembly/resources/myeq-manager-config.xml 
		-->
  	<profile>
  		<id>myeq.test.h2</id>
  		<activation><activeByDefault>true</activeByDefault></activation>
  		<properties>
				<myeq.test.jdbc.username>sa</myeq.test.jdbc.username>
				<myeq.test.jdbc.password />
				<myeq.test.jdbc.url>jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE</myeq.test.jdbc.url>
				<myeq.test.jdbc.driverClassName>org.h2.Driver</myeq.test.jdbc.driverClassName>
				<myeq.test.hibernate.dialect>org.hibernate.dialect.H2Dialect</myeq.test.hibernate.dialect>
				<myeq.test.hibernate.hbm2ddl.auto>update</myeq.test.hibernate.hbm2ddl.auto> 
  		</properties>
  		<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
  		</dependencies>
  	</profile>
  	
		<!-- 
		  The Production instance of myEquivalents X-references for BioSD 
		  These placeholders will fill a file like https://github.com/EBIBioSamples/myequivalents/blob/master/myequivalents-cmdline/src/main/assembly/resources/myeq-manager-config.xml
		  which you need to have in your project, together with the myequivalents dependency.
		-->
  	<profile>
  		<id>myeq.prod</id>
  		<activation><activeByDefault>false</activeByDefault></activation>
  		<properties>
				<myeq.jdbc.username>myeq</myeq.jdbc.username>
				<myeq.jdbc.password>my3qp4o</myeq.jdbc.password>
				<myeq.jdbc.url>jdbc:oracle:thin:@ora-vm-023.ebi.ac.uk:1531:biosdpro</myeq.jdbc.url>
				<myeq.jdbc.driverClassName>${oracle.jdbc.driverClassName}</myeq.jdbc.driverClassName>
				<myeq.hibernate.dialect>${oracle.hibernate.dialect}</myeq.hibernate.dialect>
				<myeq.hibernate.hbm2ddl.auto /> 
  		</properties>
  		<dependencies>
				<dependency>
					<groupId>${oracle.groupId}</groupId>
					<artifactId>${oracle.artifactId}</artifactId>
					<version>${oracle.version}</version>
				</dependency>
  		</dependencies>
  	</profile>   	
		
		
	</profiles>    

</project>
